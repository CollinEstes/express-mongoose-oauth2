{
  "name": "passport-coinbase",
  "version": "0.1.2",
  "description": "Coinbase authentication strategy for Passport.",
  "keywords": [
    "passport",
    "coinbase",
    "auth",
    "authn",
    "authentication",
    "identity"
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/idris/passport-coinbase.git"
  },
  "bugs": {
    "url": "http://github.com/idris/passport-coinbase/issues"
  },
  "author": {
    "name": "Idris Mokhtarzada",
    "url": "http://about.me/idris"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib/passport-coinbase",
  "dependencies": {
    "pkginfo": "0.3.x",
    "passport-oauth": "1.0.x"
  },
  "devDependencies": {
    "vows": "0.7.x"
  },
  "scripts": {
    "test": "NODE_PATH=lib node_modules/.bin/vows test/*-test.js"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "readme": "# Passport-Coinbase\n\n[Passport](http://passportjs.org/) strategy for authenticating with [Coinbase](https://coinbase.com/)\nusing the OAuth 2.0 API.\n\nThis module lets you authenticate using Coinbase in your Node.js applications.\nBy plugging into Passport, Coinbase authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Install\n\n    $ npm install passport-coinbase\n\n## Usage\n\n#### Configure Strategy\n\nThe Coinbase authentication strategy authenticates users using a Coinbase account\nand OAuth 2.0 tokens.  The strategy requires a `verify` callback, which accepts\nthese credentials and calls `done` providing a user, as well as `options`\nspecifying a client ID, client secret, and callback URL.\n\n    passport.use(new CoinbaseStrategy({\n        clientID: COINBASE_CLIENT_ID,\n        clientSecret: COINBASE_CLIENT_SECRET,\n        callbackURL: \"http://127.0.0.1:3000/auth/coinbase/callback\"\n      },\n      function(accessToken, refreshToken, profile, done) {\n        // ...\n      }\n    ));\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'coinbase'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n    app.get('/auth/coinbase',\n      passport.authenticate('coinbase'));\n\n    app.get('/auth/coinbase/callback', \n      passport.authenticate('coinbase', { failureRedirect: '/login' }),\n      function(req, res) {\n        // Successful authentication, redirect home.\n        res.redirect('/');\n      });\n\n## Examples\n\nFor a complete, working example, refer to the [login example](https://github.com/idris/passport-coinbase/tree/master/examples/login).\n\n## Tests\n\n    $ npm install --dev\n    $ make test\n\n[![Build Status](https://secure.travis-ci.org/idris/passport-coinbase.png)](http://travis-ci.org/idris/passport-coinbase)\n\n## Credits\n\n  - [Idris Mokhtarzada](https://github.com/idris)\n  - Forked from [passport-github](https://github.com/jaredhanson/passport-github) by [Jared Hanson](https://github.com/jaredhanson)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/idris/passport-coinbase",
  "_id": "passport-coinbase@0.1.2",
  "_from": "passport-coinbase@^0.1.2"
}
